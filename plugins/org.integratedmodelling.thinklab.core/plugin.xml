<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE plugin PUBLIC "-//JPF//Java Plug-in Manifest 1.0" "http://jpf.sourceforge.net/plugin_1_0.dtd">
<plugin class="org.integratedmodelling.thinklab.Thinklab" id="org.integratedmodelling.thinklab.core" version="0.8.1.20110428103647">
	<runtime>
		<library id="core" path="classes/" type="code">
			<export prefix="*"/>
		</library>
		<library id="ontologies" path="ontologies/" type="resources"/>
		<library id="config" path="config/" type="resources"/>
		<library id="clj" path="clj/" type="resources"/>
		<library id="agg_classes" path="lib/agg_V1622_classes.jar" type="code"/>

		<library id="ant-nodeps" path="lib/ant-nodeps-1.6.5.jar" type="code"/>
		<library id="ant-optional" path="lib/ant-optional-1.5.1.jar" type="code"/>
		<library id="asm" path="lib/asm.jar" type="code"/>
		<library id="asm-attris" path="lib/asm-attrs.jar" type="code"/>
		<library id="aterm" path="lib/aterm-java-1.6.jar" type="code"/>
		<library id="bsf" path="lib/bsf.jar" type="code"/>
		<library id="bsh" path="lib/bsh_custom.jar" type="code">
			<export prefix="*"/>
		</library>

		<library id="commons-beanutils" path="lib/commons-beanutils-1.7.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="commons-codec" path="lib/commons-codec-1.3.jar" type="code"/>
		<library id="commons-collections" path="lib/commons-collections-3.2.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="commons-collections-testframework" path="lib/commons-collections-testframework-3.2.jar" type="code"/>
		<library id="commons-dbcp" path="lib/commons-dbcp-1.2.2.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="commons-httpclient" path="lib/commons-httpclient-3.0.1.jar" type="code"/>
		<library id="commons-jxpath" path="lib/commons-jxpath-1.2.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="commons-io" path="lib/commons-io-1.4.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="commons-lang" path="lib/commons-lang-2.2.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="commons-logging" path="lib/commons-logging-1.1.1.jar" type="code"/>
		<library id="commons-math" path="lib/commons-math-2.1.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="commons-pool" path="lib/commons-pool-1.3.jar" type="code">
			<export prefix="*"/>
		</library>
		
		
		<library id="concurrent" path="lib/concurrent-1.3.4.jar" type="code"/>
		<library id="http" path="lib/http.jar" type="code"/>
		<library id="icu4j" path="lib/icu4j_3_4.jar" type="code"/>
		<library id="iri" path="lib/iri.jar" type="code"/>
		<library id="jena" path="lib/jena.jar" type="code"/>
		<library id="jep" path="lib/jep-2.4.1.jar" type="code"/>
		<library id="jgrapht" path="lib/jgrapht.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="jline" path="lib/jline-0.9.94.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="jopt-simple" path="lib/jopt-simple-2.4-beta2.jar" type="code"/>
		<library id="junit" path="lib/junit.jar" type="code">
			<export prefix="*"/>
		</library>

		<library id="google.collect" path="lib/com.google.collect_1.0.0.jar" type="code">
			<export prefix="*"/>
		</library>

		
		<library id="guice" path="lib/guice-3.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="javax.inject" path="lib/javax.inject.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="aopalliance" path="lib/aopalliance.jar" type="code">
			<export prefix="*"/>
		</library>
		
		
		<library id="emf.common" path="lib/org.eclipse.emf.common_2.7.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="emf.core" path="lib/org.eclipse.emf.ecore_2.7.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="emf.xmi" path="lib/org.eclipse.emf.ecore.xmi_2.7.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="xtext" path="lib/org.eclipse.xtext_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="xbase" path="lib/org.eclipse.xtext.xbase_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="xbase.lib" path="lib/org.eclipse.xtext.xbase.lib_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="xtext.types" path="lib/org.eclipse.xtext.common.types_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="xtext.types.shared" path="lib/org.eclipse.xtext.common.types.shared_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="xtext.ecore" path="lib/org.eclipse.xtext.ecore_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="emf.codegen" path="lib/org.eclipse.emf.codegen_2.6.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="emf.codegen.ecore" path="lib/org.eclipse.emf.codegen.ecore_2.7.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="mwe.core" path="lib/org.eclipse.mwe.core_1.1.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="mwe.utils" path="lib/org.eclipse.mwe.utils_1.1.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="mwe2.language" path="lib/org.eclipse.mwe2.language_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="mwe2.launch" path="lib/org.eclipse.mwe2.launch_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="mwe2.lib" path="lib/org.eclipse.mwe2.lib_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="mwe2.runtime" path="lib/org.eclipse.mwe2.runtime_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="xpand" path="lib/org.eclipse.xpand_1.1.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="xtend" path="lib/org.eclipse.xtend_1.1.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="xtend.typesystem" path="lib/org.eclipse.xtend.typesystem.emf_1.0.1.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="xtext.generator" path="lib/org.eclipse.xtext.generator_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="xtext.util" path="lib/org.eclipse.xtext.util_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="xtext.xtend2" path="lib/org.eclipse.xtext.xtend2_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="xtext.xtend2.lib" path="lib/org.eclipse.xtext.xtend2.lib_2.0.0.jar" type="code">
			<export prefix="*"/>
		</library>		
		<library id="antlr.runtime" path="lib/org.antlr.runtime_3.2.0.jar" type="code">
			<export prefix="*"/>
		</library>
		
		<library id="icu" path="lib/com.ibm.icu_4.4.2.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="kazuki" path="lib/kazuki.jar" type="code"/>
		<library id="mvel" path="lib/mvel2-2.0.7.jar" type="code">
				<export prefix="*"/>
		</library>

		<!-- <library type="code" id="owlapi-api"  path="lib/owlapi-api.jar"/>
		<library type="code" id="owlapi-apibinding"  path="lib/owlapi-apibinding.jar"/>
		<library type="code" id="owlapi-change"  path="lib/owlapi-change.jar"/>
		<library type="code" id="owlapi-debugging"  path="lib/owlapi-debugging.jar"/>
		<library type="code" id="owlapi-dig1_1"  path="lib/owlapi-dig1_1.jar"/>
		<library type="code" id="owlapi-functionalparser"  path="lib/owlapi-functionalparser.jar"/>
		<library type="code" id="owlapi-functionalrenderer"  path="lib/owlapi-functionalrenderer.jar"/>
		<library type="code" id="owlapi-impl"  path="lib/owlapi-impl.jar"/>
		<library type="code" id="owlapi-krssparser"  path="lib/owlapi-krssparser.jar"/>
		<library type="code" id="owlapi-mansyntaxparser"  path="lib/owlapi-mansyntaxparser.jar"/>
		<library type="code" id="owlapi-mansyntaxrenderer"  path="lib/owlapi-mansyntaxrenderer.jar"/>
		<library type="code" id="owlapi-metrics"  path="lib/owlapi-metrics.jar"/>
		<library type="code" id="owlapi-oboparser"  path="lib/owlapi-oboparser.jar"/>
		<library type="code" id="owlapi-owlxmlparser"  path="lib/owlapi-owlxmlparser.jar"/>
		<library type="code" id="owlapi-owlxmlrenderer"  path="lib/owlapi-owlxmlrenderer.jar"/>
		<library type="code" id="owlapi-rdfapi"  path="lib/owlapi-rdfapi.jar"/>
		<library type="code" id="owlapi-rdfxmlparser"  path="lib/owlapi-rdfxmlparser.jar"/>
		<library type="code" id="owlapi-rdfxmlrenderer"  path="lib/owlapi-rdfxmlrenderer.jar"/>
		<library type="code" id="owlapi-util"  path="lib/owlapi-util.jar"/> -->

		<library id="thinklab-api" path="lib/thinklab-api.jar" type="code">
				<export prefix="*"/>
		</library>
		<library id="thinkql" path="lib/thinkql.jar" type="code">
				<export prefix="*"/>
		</library> 
		<library id="clojure" path="lib/clojure-1.3.0-beta1.jar" type="code">
				<export prefix="*"/>
		</library>

		<library id="owlapi" path="lib/owlapi-bin.jar" type="code"/>
		<library id="owlsyntax" path="lib/owlsyntax.jar" type="code"/>
		<library id="pellet" path="lib/pellet.jar" type="code"/>
		<library id="protege" path="lib/protege.jar" type="code">
				<export prefix="*"/>
		</library>
		<library id="protege-owl" path="lib/protege-owl.jar" type="code">
				<export prefix="*"/>
		</library>
		<library id="rdf-api" path="lib/rdf-api-2001-01-19.jar" type="code"/>
		<library id="relaxngDatatype" path="lib/relaxngDatatype.jar" type="code"/>
		<library id="resolver" path="lib/resolver.jar" type="code"/>
		<library id="serializer" path="lib/serializer.jar" type="code"/>
		<library id="stax-api" path="lib/stax-api-1.0.jar" type="code"/>
		<library id="swrl-jess-bridge" path="lib/swrl-jess-bridge.jar" type="code"/>
		<library id="wstx-asl" path="lib/wstx-asl-3.0.0.jar" type="code"/>
		<library id="xercesImpl" path="lib/xercesImpl-2.7.1.jar" type="code">
				<export prefix="*"/>
		</library>
		<library id="xml-apis" path="lib/xml-apis-1.0.b2.jar" type="code">
				<export prefix="*"/>
		</library>
		<library id="xml-apis-xerces" path="lib/xml-apis-xerces-2.7.1.jar" type="code">
				<export prefix="*"/>
		</library>
		<library id="xmlParserAPIs" path="lib/xmlParserAPIs.jar" type="code">
				<export prefix="*"/>
		</library>
		<library id="xsd" path="lib/xsd-2.2.2.jar" type="code">
				<export prefix="*"/>
		</library>
		<library id="xsdlib" path="lib/xsdlib-20050614.jar" type="code"/>	

		<library id="org.apache.commons.fileupload" path="lib/org.apache.commons.fileupload.jar" type="code">
			<export prefix="*"/>
		</library>
		
		<library id="org.apache.httpclient" path="lib/org.apache.httpclient.jar" type="code">
			<export prefix="*"/>
		</library>
		
		<library id="restlet" path="lib/org.restlet.jar" type="code">
			<export prefix="*"/>
		</library>

		<library id="restlet.ext.json" path="lib/org.restlet.ext.json.jar" type="code">
			<export prefix="*"/>
		</library>

		<library id="restlet.ext.fileupload" path="lib/org.restlet.ext.fileupload.jar" type="code">
			<export prefix="*"/>
		</library>

		<library id="restlet.ext.jetty" path="lib/org.restlet.ext.jetty.jar" type="code">
			<export prefix="*"/>
		</library>

		<library id="javax.servlet" path="lib/javax.servlet.jar" type="code">
			<export prefix="*"/>
		</library>
		
		<!-- following libs support core REST services -->
		<library id="jetty.server" path="lib/org.eclipse.jetty.server.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="jetty.io" path="lib/org.eclipse.jetty.io.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="jetty.ajp" path="lib/org.eclipse.jetty.ajp.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="jetty.http" path="lib/org.eclipse.jetty.http.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="jetty.continuations" path="lib/org.eclipse.jetty.continuations.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="jetty.util" path="lib/org.eclipse.jetty.util.jar" type="code">
			<export prefix="*"/>
		</library>
		
		<library id="json" path="lib/org.json.jar" type="code">
			<export prefix="*"/>
		</library>
		
		<!-- swt/jface support for occasional GUIs. Would be much nicer to 
			 not have to suck in the Eclipse runtime and OSGI for a couple
			 stupid dependencies. TODO check if that can be solved. -->
		<library id="swt" path="lib/swt.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="jface" path="lib/jface-3.0m8.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="forms" path="lib/forms-3.0m8.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="osgi" path="lib/osgi-3.0m8.jar" type="code">
			<export prefix="*"/>
		</library>
		<library id="runtime" path="lib/runtime-3.0m8.jar" type="code">
			<export prefix="*"/>
		</library>
		
	</runtime>

	<!-- declare an ontology -->
	<extension-point extension-multiplicity="any" id="ontology">
		<parameter-def id="url" multiplicity="one" type="string"/>
		<parameter-def id="concept-space" multiplicity="one" type="string"/>
		<parameter-def id="description" multiplicity="none-or-one" type="string"/>
	</extension-point>

	<!-- declare a kbox, optionally loading initial content if it's empty -->
	<extension-point extension-multiplicity="any" id="kbox">
		<parameter-def id="protocol" multiplicity="one" type="string"/>
		<parameter-def id="url" multiplicity="one" type="string"/>
		<parameter-def id="id" multiplicity="one" type="string"/>
		<parameter-def id="initial-content" multiplicity="none-or-one" type="string"/>
		<parameter-def id="metadata-schema" multiplicity="none-or-one" type="string"/>
		<parameter-def id="description" multiplicity="none-or-one" type="string"/>
	</extension-point>

	<!-- declare a kbox handler -->
	<extension-point extension-multiplicity="any" id="kbox-handler">
		<parameter-def id="class" multiplicity="one" type="string"/>
		<parameter-def id="protocol" multiplicity="one" type="string"/>
		<parameter-def id="description" multiplicity="none-or-one" type="string"/>
	</extension-point>

	<extension-point extension-multiplicity="any" id="session-listener">
		<parameter-def id="class" multiplicity="one" type="string"/>
		<parameter-def id="description" multiplicity="none-or-one" type="string"/>
	</extension-point>

	<extension-point extension-multiplicity="any" id="knowledge-loader">
		<parameter-def id="class" multiplicity="one" type="string"/>
		<parameter-def id="format" multiplicity="one" type="string"/>
		<parameter-def id="description" multiplicity="none-or-one" type="string"/>
	</extension-point>

	<extension-point extension-multiplicity="any" id="knowledge-listener">
		<parameter-def id="class" multiplicity="one" type="string"/>
		<parameter-def id="description" multiplicity="none-or-one" type="string"/>
	</extension-point>

	<extension-point extension-multiplicity="any" id="knowledge-importer">
		<parameter-def id="class" multiplicity="one" type="string"/>
		<parameter-def id="format" multiplicity="one" type="string"/>
		<parameter-def id="description" multiplicity="none-or-one" type="string"/>
	</extension-point>

	<extension-point extension-multiplicity="any" id="language-binding">
		<parameter-def id="language" multiplicity="one" type="string"/>
		<parameter-def id="task-package" multiplicity="any" type="string"/>
		<parameter-def id="classpath" multiplicity="any" type="string"/>
		<parameter-def id="resource" multiplicity="one-or-more" type="string"/>
	</extension-point>

	<extension-point extension-multiplicity="any" id="language-interpreter">
		<parameter-def id="class" multiplicity="one" type="string"/>
		<parameter-def id="language" multiplicity="one" type="string"/>
		<parameter-def id="description" multiplicity="none-or-one" type="string"/>
		<parameter-def id="example" multiplicity="any" type="string"/>
	</extension-point>

	<extension-point extension-multiplicity="any" id="application">
		<parameter-def id="id" multiplicity="one" type="string"/>
		<parameter-def id="main-task-class" multiplicity="none-or-one" type="string"/>
		<parameter-def id="session-class" multiplicity="none-or-one" type="string"/>
		<parameter-def id="declaration" multiplicity="none-or-one" type="string">
			<parameter-def id="language" multiplicity="one" type="string"/>
			<parameter-def id="code" multiplicity="none-or-one" type="string"/>
			<parameter-def id="script" multiplicity="one-or-more" type="string"/>
		</parameter-def>
		<parameter-def id="description" multiplicity="none-or-one" type="string"/>
	</extension-point>

	<extension-point extension-multiplicity="any" id="command-handler">
		<parameter-def id="class" multiplicity="one" type="string"/>
		<parameter-def id="command-name" multiplicity="one" type="string"/>
		<parameter-def id="command-description" multiplicity="one" type="string"/>
		<parameter-def id="return-type" multiplicity="none-or-one" type="string"/>
		<parameter-def id="argument-names" multiplicity="none-or-one" type="string"/>
		<parameter-def id="argument-types" multiplicity="none-or-one" type="string"/>
		<parameter-def id="argument-descriptions" multiplicity="none-or-one" type="string"/>
		<parameter-def id="optional-argument-names" multiplicity="none-or-one" type="string"/>
		<parameter-def id="optional-argument-types" multiplicity="none-or-one" type="string"/>
		<parameter-def id="optional-argument-descriptions" multiplicity="none-or-one" type="string"/>
		<parameter-def id="optional-argument-default-values" multiplicity="none-or-one" type="string"/>
		<parameter-def id="option-names" multiplicity="none-or-one" type="string"/>
		<parameter-def id="option-long-names" multiplicity="none-or-one" type="string"/>
		<parameter-def id="option-types" multiplicity="none-or-one" type="string"/>	
		<parameter-def id="option-argument-labels" multiplicity="none-or-one" type="string"/>	
		<parameter-def id="option-descriptions" multiplicity="none-or-one" type="string"/>	
		<parameter-def id="example" multiplicity="any" type="string"/>
	</extension-point>

</plugin>
