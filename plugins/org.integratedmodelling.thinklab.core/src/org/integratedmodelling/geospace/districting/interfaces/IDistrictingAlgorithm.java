/**
 * Copyright 2011 The ARIES Consortium (http://www.ariesonline.org) and
 * www.integratedmodelling.org. 

   This file is part of Thinklab.

   Thinklab is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published
   by the Free Software Foundation, either version 3 of the License,
   or (at your option) any later version.

   Thinklab is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with Thinklab.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.integratedmodelling.geospace.districting.interfaces;

import org.integratedmodelling.exceptions.ThinklabException;
import org.integratedmodelling.geospace.districting.utils.DistrictingResults;

/**
 * Interface for a districting algorithm to implement.  The only
 * relevant functions right now are createDistricts(dataset, k) and
 * createDistricts(dataset, initialK, ...), which will receive an
 * array of arrays of doubles, where each array holds the values from
 * one GIS layer.  The return value will be an array of
 * DistrictingResults objects, which contain all the information
 * generated by the districting procedure.
 * 
 * @author Gary Johnson
 *
 */
public interface IDistrictingAlgorithm {

    public abstract DistrictingResults createDistricts(double[][] dataset, int initialK) throws ThinklabException;

    public abstract DistrictingResults createDistricts(double[][] dataset, int initialK, double stoppingThreshold,
						       double varianceRatio, double membershipRatio,
						       double separationRatio) throws ThinklabException;

}